import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';
dotenv.config();

// Configura√ß√£o do Supabase
const supabaseUrl = 'https://nvhaylwuvdmsjuwjsfva.supabase.co';
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im52aGF5bHd1dmRtc2p1d2pzZnZhIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Njc2NzAzOSwiZXhwIjoyMDcyMzQzMDM5fQ.P8-0hboVl3OmtUwzg0iBCvTr5nY0jWMTTLr9F5XTB6c';

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function testUserCreation() {
  console.log('üîç Verificando usu√°rios no Supabase...');
  
  try {
    // Listar todos os usu√°rios na tabela auth.users
    const { data: users, error } = await supabase.auth.admin.listUsers();
    
    if (error) {
      console.error('‚ùå Erro ao buscar usu√°rios:', error.message);
      return;
    }
    
    console.log(`\nüìä Total de usu√°rios encontrados: ${users.users.length}`);
    
    if (users.users.length === 0) {
      console.log('‚ö†Ô∏è  Nenhum usu√°rio encontrado na tabela auth.users');
      return;
    }
    
    // Mostrar detalhes dos usu√°rios
    users.users.forEach((user, index) => {
      console.log(`\nüë§ Usu√°rio ${index + 1}:`);
      console.log(`   ID: ${user.id}`);
      console.log(`   Email: ${user.email}`);
      console.log(`   Email confirmado: ${user.email_confirmed_at ? '‚úÖ Sim' : '‚ùå N√£o'}`);
      console.log(`   Criado em: ${user.created_at}`);
      console.log(`   √öltima atualiza√ß√£o: ${user.updated_at}`);
      console.log(`   Status: ${user.email_confirmed_at ? 'Ativo' : 'Aguardando confirma√ß√£o'}`);
      
      if (!user.email_confirmed_at) {
        console.log(`   ‚ö†Ô∏è  PROBLEMA: Este usu√°rio n√£o confirmou o email ainda!`);
        console.log(`   üìß Token de confirma√ß√£o: ${user.confirmation_token ? 'Presente' : 'Ausente'}`);
        console.log(`   üìÖ Confirma√ß√£o enviada em: ${user.confirmation_sent_at || 'N/A'}`);
      }
    });
    
    // Verificar usu√°rios n√£o confirmados
    const unconfirmedUsers = users.users.filter(user => !user.email_confirmed_at);
    
    if (unconfirmedUsers.length > 0) {
      console.log(`\nüö® DIAGN√ìSTICO DO PROBLEMA:`);
      console.log(`   ‚Ä¢ ${unconfirmedUsers.length} usu√°rio(s) criado(s) mas n√£o confirmado(s)`);
      console.log(`   ‚Ä¢ Estes usu√°rios N√ÉO aparecem no painel porque n√£o confirmaram o email`);
      console.log(`   ‚Ä¢ O fluxo de signup est√° funcionando (usu√°rio √© criado)`);
      console.log(`   ‚Ä¢ O problema est√° na confirma√ß√£o do email`);
      
      console.log(`\nüí° POSS√çVEIS CAUSAS:`);
      console.log(`   1. Link de confirma√ß√£o expirando muito r√°pido`);
      console.log(`   2. Configura√ß√£o de redirect URLs no Supabase Dashboard`);
      console.log(`   3. Problema na sincroniza√ß√£o ap√≥s confirma√ß√£o`);
      console.log(`   4. Usu√°rio n√£o clicou no link de confirma√ß√£o`);
    } else {
      console.log(`\n‚úÖ Todos os usu√°rios est√£o confirmados!`);
    }
    
  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error.message);
  }
}

// Fun√ß√£o para testar cria√ß√£o de usu√°rio de teste
async function createTestUser() {
  const testEmail = `teste-${Date.now()}@exemplo.com`;
  const testPassword = 'senha123456';
  
  console.log(`\nüß™ Criando usu√°rio de teste: ${testEmail}`);
  
  try {
    const { data, error } = await supabase.auth.admin.createUser({
      email: testEmail,
      password: testPassword,
      email_confirm: true // Confirma automaticamente para teste
    });
    
    if (error) {
      console.error('‚ùå Erro ao criar usu√°rio de teste:', error.message);
      return;
    }
    
    console.log('‚úÖ Usu√°rio de teste criado com sucesso!');
    console.log(`   ID: ${data.user.id}`);
    console.log(`   Email: ${data.user.email}`);
    console.log(`   Confirmado: ${data.user.email_confirmed_at ? '‚úÖ Sim' : '‚ùå N√£o'}`);
    
  } catch (error) {
    console.error('‚ùå Erro durante cria√ß√£o do usu√°rio de teste:', error.message);
  }
}

// Executar testes
async function runTests() {
  console.log('üöÄ Iniciando diagn√≥stico de usu√°rios no Supabase\n');
  
  await testUserCreation();
  
  console.log('\n' + '='.repeat(60));
  console.log('üìã RESUMO DO DIAGN√ìSTICO:');
  console.log('='.repeat(60));
  console.log('1. Verificamos todos os usu√°rios na tabela auth.users');
  console.log('2. Identificamos usu√°rios n√£o confirmados');
  console.log('3. O problema est√° na confirma√ß√£o de email, n√£o na cria√ß√£o');
  console.log('\nüí° PR√ìXIMOS PASSOS:');
  console.log('‚Ä¢ Verificar configura√ß√£o de Redirect URLs no Supabase Dashboard');
  console.log('‚Ä¢ Adicionar http://localhost:5173/** nas Redirect URLs');
  console.log('‚Ä¢ Testar o link de confirma√ß√£o imediatamente ap√≥s receber');
  console.log('‚Ä¢ Verificar se a sincroniza√ß√£o ap√≥s confirma√ß√£o est√° funcionando');
}

runTests().catch(console.error);