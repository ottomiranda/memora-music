import{C as e,E as r}from"./index-BX7dOzwF.js";import"./react-vendor-CNyCdty9.js";import"./utils-vendor-euKWYQ_X.js";import"./radix-vendor-D0itpczX.js";import"./ui-vendor-bNvS7E9t.js";import"./i18n-vendor-CvzjU6Pd.js";let n;async function t(t){try{const i=r("NEXT_PUBLIC_SENTRY_DSN")??r("VITE_SENTRY_DSN");if(!i)return void e.warn({msg:"Sentry DSN not found, skipping initialization"});const o=await async function(){if(void 0!==n)return n;try{const e="@sentry/react";n=await import(e)}catch(r){n=null,e.warn({msg:"Sentry module not available, skipping instrumentation",error:r instanceof Error?r.message:r})}return n}();if(!o)return;const a=[];"function"==typeof o.BrowserTracing&&a.push(new o.BrowserTracing({tracePropagationTargets:["localhost",/^https:\/\/[^/]*\.memora\.music/]})),"function"==typeof o.Replay&&a.push(new o.Replay),o.init({dsn:i,environment:t.environment,release:t.release,debug:t.debug,tracesSampleRate:1,replaysSessionSampleRate:.1,replaysOnErrorSampleRate:1,integrations:a}),e.info({msg:"Sentry initialized successfully",environment:t.environment,release:t.release})}catch(i){const r={code:"SENTRY_INITIALIZATION_ERROR",message:i instanceof Error?i.message:"Failed to initialize Sentry",stack:i instanceof Error?i.stack:void 0};throw e.error({msg:"Failed to initialize Sentry",error:r}),r}}export{t as initializeSentry};
