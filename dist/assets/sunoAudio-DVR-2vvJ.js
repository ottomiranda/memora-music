var t=Object.defineProperty,e=(e,s,r)=>((e,s,r)=>s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[s]=r)(e,"symbol"!=typeof s?s+"":s,r);import{w as s,D as r,x as n}from"./index-BX7dOzwF.js";const a={BASE_URL:"/",DEV:!0,MODE:"production",PROD:!1,SSR:!1,VITE_API_URL:"http://localhost:3337",VITE_STRIPE_PUBLISHABLE_KEY:"pk_test_51S3bc1IA5Nxa3lOrVErNEZJtET1HnvZ20cs4QS2N7DUNnm3G4VOlyhEKiQWUd4eJR0xLm6UafoSx3Wwk8M8nY0Cj00aZUhQcwY",VITE_SUNO_API_KEY:"32a5760785b3cf96089add16aae2e263",VITE_SUPABASE_ANON_KEY:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im52aGF5bHd1dmRtc2p1d2pzZnZhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY3NjcwMzksImV4cCI6MjA3MjM0MzAzOX0.WNZc_C9DAHTmjOaJpm-1TbH4-ZGKbO4oZR5c-KlPuzg",VITE_SUPABASE_URL:"https://nvhaylwuvdmsjuwjsfva.supabase.co",VITE_USER_NODE_ENV:"development"};const o=new class{constructor(t){e(this,"apiKey"),e(this,"baseUrl"),this.apiKey=t,this.baseUrl="https://api.sunoapi.org/api/v1"}async getMusicDetails(t){try{const e=await fetch(`${this.baseUrl}/music/${encodeURIComponent(t)}`,{method:"GET",headers:{Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"}});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.json()}catch(e){return{success:!1,error:e instanceof Error?e.message:"Unknown error"}}}async generateMusic(t){try{const e={...t,callBackUrl:(null==a?void 0:a.VITE_APP_URL)||(null==a?void 0:a.NEXT_PUBLIC_APP_URL)||("undefined"!=typeof window?window.location.origin:"http://localhost:5173")},s=await fetch(`${this.baseUrl}/generate`,{method:"POST",headers:{Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify(e)});if(!s.ok)throw new Error(`HTTP error! status: ${s.status}`);return await s.json()}catch(e){throw e}}}("32a5760785b3cf96089add16aae2e263"),i={VITE_SUPABASE_ANON_KEY:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im52aGF5bHd1dmRtc2p1d2pzZnZhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY3NjcwMzksImV4cCI6MjA3MjM0MzAzOX0.WNZc_C9DAHTmjOaJpm-1TbH4-ZGKbO4oZR5c-KlPuzg",VITE_SUPABASE_URL:"https://nvhaylwuvdmsjuwjsfva.supabase.co"};var u={};let c=null,d=null;function l(){if(!c){const t=void 0!==import.meta&&i?i:{},e=t.VITE_SUPABASE_URL||t.NEXT_PUBLIC_SUPABASE_URL||("undefined"!=typeof process?u.SUPABASE_URL:void 0),s=t.VITE_SUPABASE_ANON_KEY||t.NEXT_PUBLIC_SUPABASE_ANON_KEY||("undefined"!=typeof process?u.SUPABASE_ANON_KEY:void 0);if(!e||!s)throw new Error("Supabase configuration missing. Please set VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY (or NEXT_PUBLIC_*), or SUPABASE_URL/SUPABASE_ANON_KEY in Node env.");c=n(e,s)}return c}function g(){if(!d){const t="undefined"!=typeof process?u.SUPABASE_URL:void 0,e="undefined"!=typeof process?u.SUPABASE_SERVICE_ROLE_KEY:void 0;if(!t||!e)throw new Error("Supabase configuration missing. Please check SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY environment variables (server-side).");d=n(t,e)}return d}function _(){return g()}class h{static async createSong(t){try{const e=s(t.title),r=await this.shouldSongBePaid(t.userId,t.guestId),{data:n,error:a}=await g().from("songs").insert({user_id:t.userId||null,guest_id:t.guestId||null,title:e,lyrics:t.lyrics||null,prompt:t.prompt||null,genre:t.genre||null,mood:t.mood||null,image_url:t.imageUrl||null,audio_url_option1:t.audioUrlOption1||null,audio_url_option2:t.audioUrlOption2||null,suno_task_id:t.sunoTaskId||t.taskId||null,generation_status:"completed",ispaid:r}).select().single();if(a)throw new Error(`Failed to create song: ${a.message}`);return r||await this.incrementFreeSongsUsed(t.userId,t.guestId),this.mapDbToSong(n)}catch(e){throw e}}static async getRandomPublicSongs(t=24){try{const{data:e,error:s}=await l().from("songs").select("*").order("created_at",{ascending:!1}).limit(Math.max(8*t,200));if(s)throw new Error(`Failed to fetch discovery songs: ${s.message}`);const r=(e||[]).filter(t=>{const e=!!t.image_url,s=!!t.audio_url_option1||!!t.audio_url_option2,r="completed"===(t.generation_status||t.status)||null==t.generation_status;return e&&s&&r});for(let t=r.length-1;t>0;t--){const e=Math.floor(Math.random()*(t+1));[r[t],r[e]]=[r[e],r[t]]}return r.slice(0,t).map(this.mapDbToSong.bind(this))}catch(e){throw e}}static async updateSong(t,e,r={userId:null,guestId:null}){try{const n={};if("string"==typeof(null==e?void 0:e.title)&&(n.title=s(e.title)),"string"==typeof(null==e?void 0:e.lyrics)&&(n.lyrics=e.lyrics),0===Object.keys(n).length)return null;let a=g().from("songs").update({...n,updated_at:(new Date).toISOString()}).eq("id",t);if(null==r?void 0:r.userId)a=a.eq("user_id",r.userId);else{if(!(null==r?void 0:r.guestId))throw new Error("Missing identity for update");a=a.eq("guest_id",r.guestId)}const{data:o,error:i}=await a.select("*").maybeSingle();if(i)throw i;return o?this.mapDbToSong(o):null}catch(n){throw n}}static async deleteSong(t,e={userId:null,guestId:null}){try{let s=g().from("songs").delete().eq("id",t);if(null==e?void 0:e.userId)s=s.eq("user_id",e.userId);else{if(!(null==e?void 0:e.guestId))throw new Error("Missing identity for delete");s=s.eq("guest_id",e.guestId)}const{data:r,error:n}=await s.select("id");if(n)throw n;return Array.isArray(r)&&r.length>0}catch(s){throw s}}static async getSongsByUser(t,e=20,s=0,r=null){try{const n=r?function(t){const e=l();return t&&e.auth.setSession({access_token:t,refresh_token:""}),e}(r):g(),{data:a,error:o}=await n.from("songs").select("*").eq("user_id",t).order("created_at",{ascending:!1}).range(s,s+e-1);if(o)throw new Error(`Failed to fetch user songs: ${o.message}`);return(a||[]).map(this.mapDbToSong)}catch(n){throw n}}static async getSongsByGuest(t,e=20,s=0){try{const{data:r,error:n}=await g().from("songs").select("*").eq("guest_id",t).order("created_at",{ascending:!1}).range(s,s+e-1);if(n)throw new Error(`Failed to fetch guest songs: ${n.message}`);return(r||[]).map(this.mapDbToSong)}catch(r){throw r}}static async migrateGuestSongs(t,e){try{const{data:s,error:r}=await _().from("songs").select("id").eq("guest_id",t).is("user_id",null);if(r)throw new Error(`Failed to count guest songs: ${r.message}`);if(!s||0===s.length)return 0;const{error:n}=await _().from("songs").update({user_id:e,guest_id:null,updated_at:(new Date).toISOString()}).eq("guest_id",t).is("user_id",null);if(n)throw new Error(`Failed to migrate songs: ${n.message}`);return s.length}catch(s){throw s}}static async getSongByTaskId(t){try{const e=_(),s=await e.from("songs").select("*").eq("task_id",t).maybeSingle();let r=s.data,n=s.error;if(n&&"PGRST116"!==n.code)throw new Error(`Failed to fetch song by task ID: ${n.message}`);if(!r){const s=await e.from("songs").select("*").eq("suno_task_id",t).maybeSingle();if(r=s.data,n=s.error,n&&"PGRST116"!==n.code)throw new Error(`Failed to fetch song by task ID: ${n.message}`)}return r?this.mapDbToSong(r):null}catch(e){throw e}}static async getSongById(t){try{const{data:e,error:s}=await _().from("songs").select("*").eq("id",t).maybeSingle();if(s)throw s;return e?this.mapDbToSong(e):null}catch(e){throw e}}static async updateSongStatus(t,e){try{const{error:s}=await _().from("songs").update({generation_status:e,updated_at:(new Date).toISOString()}).eq("id",t);if(s)throw new Error(`Failed to update song status: ${s.message}`)}catch(s){throw s}}static async deleteOldGuestSongs(t=30){try{const e=new Date;e.setDate(e.getDate()-t);const{data:s,error:r}=await _().from("songs").delete().is("user_id",null).not("guest_id","is",null).lt("created_at",e.toISOString()).select("id");if(r)throw new Error(`Failed to delete old guest songs: ${r.message}`);return(null==s?void 0:s.length)||0}catch(e){throw e}}static async getSongStats(t=null,e=null){try{const s=new Date;s.setHours(0,0,0,0);const r=_();if(t||e){let n=r.from("songs").select("generation_status",{count:"exact"});t?n=n.eq("user_id",t):e&&(n=n.eq("guest_id",e));const[a,o]=await Promise.all([n,n.gte("created_at",s.toISOString())]),i={};return a.data&&a.data.forEach(t=>{const e=t.generation_status||"unknown";i[e]=(i[e]||0)+1}),{total:a.count||0,byStatus:i,recent:o.count||0}}const[n,a,o,i]=await Promise.all([r.from("songs").select("id",{count:"exact",head:!0}),r.from("songs").select("id",{count:"exact",head:!0}).not("user_id","is",null),r.from("songs").select("id",{count:"exact",head:!0}).not("guest_id","is",null),r.from("songs").select("id",{count:"exact",head:!0}).gte("created_at",s.toISOString())]);return{totalSongs:n.count||0,userSongs:a.count||0,guestSongs:o.count||0,todaySongs:i.count||0}}catch(s){throw s}}static async shouldSongBePaid(t,e){var s;try{if(!t&&!e)return!0;const r=[];if(t&&r.push(`user_id.eq.${t}`),[t,e].filter(Boolean).forEach(t=>{r.push(`device_id.eq.${t}`)}),0===r.length)return!1;const{data:n,error:a}=await _().from("user_creations").select("freesongsused").or(r.join(",")).order("freesongsused",{ascending:!1}).limit(1);if(a)return!1;if(!n||0===n.length)return!1;const o=(null==(s=n[0])?void 0:s.freesongsused)||0;return o>=1}catch(r){return!1}}static async incrementFreeSongsUsed(t,e){try{const s=t||e;if(!s)return;const{data:r,error:n}=await _().rpc("increment_freesongsused",{user_device_id:s});if(n)throw new Error(`Failed to increment freesongsused: ${n.message}`)}catch(s){}}static mapDbToSong(t){try{const e=r.parse(t);return{id:e.id,userId:e.user_id,guestId:e.guest_id,title:e.title,lyrics:e.lyrics,prompt:e.prompt,genre:e.genre,mood:e.mood,imageUrl:e.image_url||null,audioUrlOption1:e.audio_url_option1,audioUrlOption2:e.audio_url_option2,sunoTaskId:e.suno_task_id||e.task_id||t.task_id||null,generationStatus:e.generation_status,isPaid:!1,createdAt:new Date(e.created_at),updatedAt:new Date(e.updated_at)}}catch(e){throw e.errors,new Error("Invalid database row structure")}}}const S=async(t=24)=>{try{return await h.getRandomPublicSongs(t)}catch(e){throw e}},w={getSongById:async t=>{try{return await h.getSongById(t)}catch(e){throw e}},getRandomPublicSongs:S,discover:async(t=24)=>await S(t),getSongsByUser:async(t,e=20,s=0,r=null)=>{try{return await h.getSongsByUser(t,e,s,r)}catch(n){throw n}},getSongsByGuest:async(t,e=20,s=0)=>{try{return await h.getSongsByGuest(t,e,s)}catch(r){throw r}},updateSong:async(t,e,s={userId:null,guestId:null})=>{try{return await h.updateSong(t,e,s)}catch(r){throw r}},deleteSong:async(t,e={userId:null,guestId:null})=>{try{return await h.deleteSong(t,e)}catch(s){throw s}},getSongByTaskId:async t=>{try{return await h.getSongByTaskId(t)}catch(e){throw e}},getSongStats:async(t=null,e=null)=>{try{return await h.getSongStats(t,e)}catch(s){throw s}}},m=new Map;async function y(t){if(!t)return null;const e=m.get(t);if(e&&Date.now()-e.fetchedAt<3e5)return e.data;const s=await o.getMusicDetails(t);if(!(null==s?void 0:s.success)||!s.data)return null;const r={streamUrl:s.data.stream_audio_url||s.data.audio_url||null,audioUrl:s.data.audio_url||s.data.stream_audio_url||null,status:s.data.status};return m.set(t,{data:r,fetchedAt:Date.now()}),r}export{y as g,w as s};
